function busquedaEuristica(Configuration, train, test, classindex, modelo, entrenar, clasificar)
% Se van a entrenar 3 modelos por cada objeto y nos vamos a quedar con el
% que mejor FScore tenga, a partir de ese vamos a entrenar el siguiente
% objeto y a proceder de la misma manera. El resultado va a estar
% condicionado al objeto por el que se empiece, por lo que se va a repetir
% el proceso una vez por objeto

% *IDEA: probar algo parecido a random forest. Elegir cada vez un primer
% objeto diferente y el siguiente objeto se escoge aleatoriamente en lugar
% de secuencialmente.

for m=1:Configuration.numObjects
    %Se entrenan los modelos
    NB = trainWekaClassifier(train(m),'bayes.NaiveBayes');
    RL = trainWekaClassifier(train(m),'functions.Logistic');
    RF = trainWekaClassifier(train(m),'trees.RandomForest');
    
    %Se sacan las predicciones
    predictedNB = wekaClassify(test(m),NB);
    predictedRL = wekaClassify(test(m),RL);
    predictedRF = wekaClassify(test(m),RF);
    
    %Se obtienen las clases reales
    actual = test(m).attributeToDoubleArray(classindex-1);
    
    errorRate = sum(actual ~= predicted)/500;
    [m errorRate]

    TP=0;TN=0;FP=0;FN=0;

    for n=1:length(predicted)
        if(predicted(n)) %se predice positivo
            if(actual(n))    %es positivo
                TP=TP+1;
            else
                FP = FP+1;
            end
        else            %se predice negativo
            if(~actual(n))  %es negativo
                TN=TN+1;
            else
                FN=FN+1;
            end
        end
    end
end


end